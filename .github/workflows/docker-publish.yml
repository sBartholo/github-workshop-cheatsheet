# This is a basic workflow to help you get started with Actions

name: Docker Compose Build and Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
          #branches: [ main ]
    branches-ignore:
      - '**'
        #pull_request:
        #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      # Runs a set of commands using the runners shell
      - name: Build and Push image
        run: |
          docker-compose -f docker-compose.yml -f build.docker-compose.yml build
          docker-compose -f docker-compose.yml -f build.docker-compose.yml push
          
      - name: Login on Azure CLI
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
          
      - name: Depoy Infrastructure
        #working-directory: infrastructure
        shell: pwsh
        env: 
          CR_PAT: ${{ secrets.CR_PAT }}
        run: |
          .\infrastructure\deploy-infrastructure.ps1 -studentprefix sba

          #- name: setup webapp
          #  run: |
          #    az webapp config container set --docker-registry-server-password ${{ secrets.GITHUB_TOKEN }} --docker-registry-server-url https://docker.pkg.github.com --docker-registry-server-user notapplicable --multicontainer-config-file docker-compose.yml --multicontainer-config-type COMPOSE --name "fabmedical-web-sba" --resource-group "RG-Lab-fabmedical-sba"

